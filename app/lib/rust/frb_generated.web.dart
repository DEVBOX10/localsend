// This file is automatically generated, so please do not edit it.
// @generated by `flutter_rust_bridge`@ 2.7.0.

// ignore_for_file: unused_import, unused_element, unnecessary_import, duplicate_ignore, invalid_use_of_internal_member, annotate_overrides, non_constant_identifier_names, curly_braces_in_flow_control_structures, prefer_const_literals_to_create_immutables, unused_field

// Static analysis wrongly picks the IO variant, thus ignore this
// ignore_for_file: argument_type_not_assignable

import 'dart:async';
import 'dart:convert';

import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated_web.dart';
import 'package:localsend_app/rust/api/logging.dart';
import 'package:localsend_app/rust/api/webrtc.dart';
import 'package:localsend_app/rust/frb_generated.dart';

abstract class RustLibApiImplPlatform extends BaseApiImpl<RustLibWire> {
  RustLibApiImplPlatform({
    required super.handler,
    required super.wire,
    required super.generalizedFrbRustBinding,
    required super.portManager,
  });

  CrossPlatformFinalizerArg get rust_arc_decrement_strong_count_LsSignalingConnectionPtr =>
      wire.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLsSignalingConnection;

  @protected
  AnyhowException dco_decode_AnyhowException(dynamic raw);

  @protected
  LsSignalingConnection dco_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLsSignalingConnection(dynamic raw);

  @protected
  LsSignalingConnection dco_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLsSignalingConnection(dynamic raw);

  @protected
  FutureOr<void> Function(LsSignalingConnection)
      dco_decode_DartFn_Inputs_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLsSignalingConnection_Output_unit_AnyhowException(
          dynamic raw);

  @protected
  Object dco_decode_DartOpaque(dynamic raw);

  @protected
  LsSignalingConnection dco_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLsSignalingConnection(dynamic raw);

  @protected
  RustStreamSink<WsServerMessage> dco_decode_StreamSink_ws_server_message_Sse(dynamic raw);

  @protected
  String dco_decode_String(dynamic raw);

  @protected
  PeerDeviceType dco_decode_box_autoadd_peer_device_type(dynamic raw);

  @protected
  PeerInfoWithoutId dco_decode_box_autoadd_peer_info_without_id(dynamic raw);

  @protected
  WsServerAnswerMessage dco_decode_box_autoadd_ws_server_answer_message(dynamic raw);

  @protected
  WsServerErrorMessage dco_decode_box_autoadd_ws_server_error_message(dynamic raw);

  @protected
  WsServerHelloMessage dco_decode_box_autoadd_ws_server_hello_message(dynamic raw);

  @protected
  WsServerJoinedMessage dco_decode_box_autoadd_ws_server_joined_message(dynamic raw);

  @protected
  WsServerLeftMessage dco_decode_box_autoadd_ws_server_left_message(dynamic raw);

  @protected
  WsServerOfferMessage dco_decode_box_autoadd_ws_server_offer_message(dynamic raw);

  @protected
  int dco_decode_i_32(dynamic raw);

  @protected
  PlatformInt64 dco_decode_isize(dynamic raw);

  @protected
  List<PeerInfo> dco_decode_list_peer_info(dynamic raw);

  @protected
  Uint8List dco_decode_list_prim_u_8_strict(dynamic raw);

  @protected
  String? dco_decode_opt_String(dynamic raw);

  @protected
  PeerDeviceType? dco_decode_opt_box_autoadd_peer_device_type(dynamic raw);

  @protected
  PeerDeviceType dco_decode_peer_device_type(dynamic raw);

  @protected
  PeerInfo dco_decode_peer_info(dynamic raw);

  @protected
  PeerInfoWithoutId dco_decode_peer_info_without_id(dynamic raw);

  @protected
  int dco_decode_u_16(dynamic raw);

  @protected
  int dco_decode_u_8(dynamic raw);

  @protected
  void dco_decode_unit(dynamic raw);

  @protected
  BigInt dco_decode_usize(dynamic raw);

  @protected
  WsServerAnswerMessage dco_decode_ws_server_answer_message(dynamic raw);

  @protected
  WsServerErrorMessage dco_decode_ws_server_error_message(dynamic raw);

  @protected
  WsServerHelloMessage dco_decode_ws_server_hello_message(dynamic raw);

  @protected
  WsServerJoinedMessage dco_decode_ws_server_joined_message(dynamic raw);

  @protected
  WsServerLeftMessage dco_decode_ws_server_left_message(dynamic raw);

  @protected
  WsServerMessage dco_decode_ws_server_message(dynamic raw);

  @protected
  WsServerOfferMessage dco_decode_ws_server_offer_message(dynamic raw);

  @protected
  AnyhowException sse_decode_AnyhowException(SseDeserializer deserializer);

  @protected
  LsSignalingConnection sse_decode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLsSignalingConnection(
      SseDeserializer deserializer);

  @protected
  LsSignalingConnection sse_decode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLsSignalingConnection(
      SseDeserializer deserializer);

  @protected
  Object sse_decode_DartOpaque(SseDeserializer deserializer);

  @protected
  LsSignalingConnection sse_decode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLsSignalingConnection(SseDeserializer deserializer);

  @protected
  RustStreamSink<WsServerMessage> sse_decode_StreamSink_ws_server_message_Sse(SseDeserializer deserializer);

  @protected
  String sse_decode_String(SseDeserializer deserializer);

  @protected
  PeerDeviceType sse_decode_box_autoadd_peer_device_type(SseDeserializer deserializer);

  @protected
  PeerInfoWithoutId sse_decode_box_autoadd_peer_info_without_id(SseDeserializer deserializer);

  @protected
  WsServerAnswerMessage sse_decode_box_autoadd_ws_server_answer_message(SseDeserializer deserializer);

  @protected
  WsServerErrorMessage sse_decode_box_autoadd_ws_server_error_message(SseDeserializer deserializer);

  @protected
  WsServerHelloMessage sse_decode_box_autoadd_ws_server_hello_message(SseDeserializer deserializer);

  @protected
  WsServerJoinedMessage sse_decode_box_autoadd_ws_server_joined_message(SseDeserializer deserializer);

  @protected
  WsServerLeftMessage sse_decode_box_autoadd_ws_server_left_message(SseDeserializer deserializer);

  @protected
  WsServerOfferMessage sse_decode_box_autoadd_ws_server_offer_message(SseDeserializer deserializer);

  @protected
  int sse_decode_i_32(SseDeserializer deserializer);

  @protected
  PlatformInt64 sse_decode_isize(SseDeserializer deserializer);

  @protected
  List<PeerInfo> sse_decode_list_peer_info(SseDeserializer deserializer);

  @protected
  Uint8List sse_decode_list_prim_u_8_strict(SseDeserializer deserializer);

  @protected
  String? sse_decode_opt_String(SseDeserializer deserializer);

  @protected
  PeerDeviceType? sse_decode_opt_box_autoadd_peer_device_type(SseDeserializer deserializer);

  @protected
  PeerDeviceType sse_decode_peer_device_type(SseDeserializer deserializer);

  @protected
  PeerInfo sse_decode_peer_info(SseDeserializer deserializer);

  @protected
  PeerInfoWithoutId sse_decode_peer_info_without_id(SseDeserializer deserializer);

  @protected
  int sse_decode_u_16(SseDeserializer deserializer);

  @protected
  int sse_decode_u_8(SseDeserializer deserializer);

  @protected
  void sse_decode_unit(SseDeserializer deserializer);

  @protected
  BigInt sse_decode_usize(SseDeserializer deserializer);

  @protected
  WsServerAnswerMessage sse_decode_ws_server_answer_message(SseDeserializer deserializer);

  @protected
  WsServerErrorMessage sse_decode_ws_server_error_message(SseDeserializer deserializer);

  @protected
  WsServerHelloMessage sse_decode_ws_server_hello_message(SseDeserializer deserializer);

  @protected
  WsServerJoinedMessage sse_decode_ws_server_joined_message(SseDeserializer deserializer);

  @protected
  WsServerLeftMessage sse_decode_ws_server_left_message(SseDeserializer deserializer);

  @protected
  WsServerMessage sse_decode_ws_server_message(SseDeserializer deserializer);

  @protected
  WsServerOfferMessage sse_decode_ws_server_offer_message(SseDeserializer deserializer);

  @protected
  bool sse_decode_bool(SseDeserializer deserializer);

  @protected
  void sse_encode_AnyhowException(AnyhowException self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLsSignalingConnection(
      LsSignalingConnection self, SseSerializer serializer);

  @protected
  void sse_encode_Auto_Ref_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLsSignalingConnection(
      LsSignalingConnection self, SseSerializer serializer);

  @protected
  void
      sse_encode_DartFn_Inputs_Auto_Owned_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLsSignalingConnection_Output_unit_AnyhowException(
          FutureOr<void> Function(LsSignalingConnection) self, SseSerializer serializer);

  @protected
  void sse_encode_DartOpaque(Object self, SseSerializer serializer);

  @protected
  void sse_encode_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLsSignalingConnection(
      LsSignalingConnection self, SseSerializer serializer);

  @protected
  void sse_encode_StreamSink_ws_server_message_Sse(RustStreamSink<WsServerMessage> self, SseSerializer serializer);

  @protected
  void sse_encode_String(String self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_peer_device_type(PeerDeviceType self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_peer_info_without_id(PeerInfoWithoutId self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_ws_server_answer_message(WsServerAnswerMessage self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_ws_server_error_message(WsServerErrorMessage self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_ws_server_hello_message(WsServerHelloMessage self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_ws_server_joined_message(WsServerJoinedMessage self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_ws_server_left_message(WsServerLeftMessage self, SseSerializer serializer);

  @protected
  void sse_encode_box_autoadd_ws_server_offer_message(WsServerOfferMessage self, SseSerializer serializer);

  @protected
  void sse_encode_i_32(int self, SseSerializer serializer);

  @protected
  void sse_encode_isize(PlatformInt64 self, SseSerializer serializer);

  @protected
  void sse_encode_list_peer_info(List<PeerInfo> self, SseSerializer serializer);

  @protected
  void sse_encode_list_prim_u_8_strict(Uint8List self, SseSerializer serializer);

  @protected
  void sse_encode_opt_String(String? self, SseSerializer serializer);

  @protected
  void sse_encode_opt_box_autoadd_peer_device_type(PeerDeviceType? self, SseSerializer serializer);

  @protected
  void sse_encode_peer_device_type(PeerDeviceType self, SseSerializer serializer);

  @protected
  void sse_encode_peer_info(PeerInfo self, SseSerializer serializer);

  @protected
  void sse_encode_peer_info_without_id(PeerInfoWithoutId self, SseSerializer serializer);

  @protected
  void sse_encode_u_16(int self, SseSerializer serializer);

  @protected
  void sse_encode_u_8(int self, SseSerializer serializer);

  @protected
  void sse_encode_unit(void self, SseSerializer serializer);

  @protected
  void sse_encode_usize(BigInt self, SseSerializer serializer);

  @protected
  void sse_encode_ws_server_answer_message(WsServerAnswerMessage self, SseSerializer serializer);

  @protected
  void sse_encode_ws_server_error_message(WsServerErrorMessage self, SseSerializer serializer);

  @protected
  void sse_encode_ws_server_hello_message(WsServerHelloMessage self, SseSerializer serializer);

  @protected
  void sse_encode_ws_server_joined_message(WsServerJoinedMessage self, SseSerializer serializer);

  @protected
  void sse_encode_ws_server_left_message(WsServerLeftMessage self, SseSerializer serializer);

  @protected
  void sse_encode_ws_server_message(WsServerMessage self, SseSerializer serializer);

  @protected
  void sse_encode_ws_server_offer_message(WsServerOfferMessage self, SseSerializer serializer);

  @protected
  void sse_encode_bool(bool self, SseSerializer serializer);
}

// Section: wire_class

class RustLibWire implements BaseWire {
  RustLibWire.fromExternalLibrary(ExternalLibrary lib);

  void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLsSignalingConnection(int ptr) =>
      wasmModule.rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLsSignalingConnection(ptr);

  void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLsSignalingConnection(int ptr) =>
      wasmModule.rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLsSignalingConnection(ptr);
}

@JS('wasm_bindgen')
external RustLibWasmModule get wasmModule;

@JS()
@anonymous
extension type RustLibWasmModule._(JSObject _) implements JSObject {
  external void rust_arc_increment_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLsSignalingConnection(int ptr);

  external void rust_arc_decrement_strong_count_RustOpaque_flutter_rust_bridgefor_generatedRustAutoOpaqueInnerLsSignalingConnection(int ptr);
}
